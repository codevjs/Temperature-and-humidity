{"ast":null,"code":"var __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function sent() {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) {\n      try {\n        if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n        if (y = 0, t) op = [op[0] & 2, t.value];\n\n        switch (op[0]) {\n          case 0:\n          case 1:\n            t = op;\n            break;\n\n          case 4:\n            _.label++;\n            return {\n              value: op[1],\n              done: false\n            };\n\n          case 5:\n            _.label++;\n            y = op[1];\n            op = [0];\n            continue;\n\n          case 7:\n            op = _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n\n          default:\n            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n              _ = 0;\n              continue;\n            }\n\n            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n              _.label = op[1];\n              break;\n            }\n\n            if (op[0] === 6 && _.label < t[1]) {\n              _.label = t[1];\n              t = op;\n              break;\n            }\n\n            if (t && _.label < t[2]) {\n              _.label = t[2];\n\n              _.ops.push(op);\n\n              break;\n            }\n\n            if (t[2]) _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n        }\n\n        op = body.call(thisArg, _);\n      } catch (e) {\n        op = [6, e];\n        y = 0;\n      } finally {\n        f = t = 0;\n      }\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nvar __values = this && this.__values || function (o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator,\n      m = s && o[s],\n      i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n    next: function next() {\n      if (o && i >= o.length) o = void 0;\n      return {\n        value: o && o[i++],\n        done: !o\n      };\n    }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\n\nimport TreeNode from \"../Base/TreeNode\";\n\nfunction Map(container, cmp) {\n  var _this = this;\n\n  if (container === void 0) {\n    container = [];\n  }\n\n  cmp = cmp || function (x, y) {\n    if (x < y) return -1;\n    if (x > y) return 1;\n    return 0;\n  };\n\n  var len = 0;\n  var root = new TreeNode();\n  root.color = TreeNode.TreeNodeColorType.black;\n\n  this.size = function () {\n    return len;\n  };\n\n  this.empty = function () {\n    return len === 0;\n  };\n\n  this.clear = function () {\n    len = 0;\n    root.key = root.value = undefined;\n    root.leftChild = root.rightChild = root.brother = undefined;\n  };\n\n  var findSubTreeMinNode = function findSubTreeMinNode(curNode) {\n    if (!curNode || curNode.key === undefined) throw new Error(\"unknown error\");\n    return curNode.leftChild ? findSubTreeMinNode(curNode.leftChild) : curNode;\n  };\n\n  var findSubTreeMaxNode = function findSubTreeMaxNode(curNode) {\n    if (!curNode || curNode.key === undefined) throw new Error(\"unknown error\");\n    return curNode.rightChild ? findSubTreeMaxNode(curNode.rightChild) : curNode;\n  };\n\n  this.front = function () {\n    if (this.empty()) return undefined;\n    var minNode = findSubTreeMinNode(root);\n    if (minNode.key === undefined || minNode.value === undefined) throw new Error(\"unknown error\");\n    return {\n      key: minNode.key,\n      value: minNode.value\n    };\n  };\n\n  this.back = function () {\n    if (this.empty()) return undefined;\n    var maxNode = findSubTreeMaxNode(root);\n    if (maxNode.key === undefined || maxNode.value === undefined) throw new Error(\"unknown error\");\n    return {\n      key: maxNode.key,\n      value: maxNode.value\n    };\n  };\n\n  this.forEach = function (callback) {\n    var e_1, _a;\n\n    var index = 0;\n\n    try {\n      for (var _b = __values(this), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var pair = _c.value;\n        callback(pair, index++);\n      }\n    } catch (e_1_1) {\n      e_1 = {\n        error: e_1_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_1) throw e_1.error;\n      }\n    }\n  };\n\n  this.getElementByPos = function (pos) {\n    var e_2, _a;\n\n    if (pos < 0 || pos >= this.size()) throw new Error(\"pos must more than 0 and less than set's size\");\n    var index = 0;\n\n    try {\n      for (var _b = __values(this), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var pair = _c.value;\n        if (index === pos) return pair;\n        ++index;\n      }\n    } catch (e_2_1) {\n      e_2 = {\n        error: e_2_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_2) throw e_2.error;\n      }\n    }\n\n    throw new Error(\"unknown Error\");\n  };\n\n  var _lowerBound = function _lowerBound(curNode, key) {\n    if (!curNode || curNode.key === undefined || curNode.value === undefined) return undefined;\n    var cmpResult = cmp(curNode.key, key);\n    if (cmpResult === 0) return {\n      key: curNode.key,\n      value: curNode.value\n    };\n    if (cmpResult < 0) return _lowerBound(curNode.rightChild, key);\n    return _lowerBound(curNode.leftChild, key) || {\n      key: curNode.key,\n      value: curNode.value\n    };\n  };\n\n  this.lowerBound = function (key) {\n    return _lowerBound(root, key);\n  };\n\n  var _upperBound = function _upperBound(curNode, key) {\n    if (!curNode || curNode.key === undefined || curNode.value === undefined) return undefined;\n    var cmpResult = cmp(curNode.key, key);\n    if (cmpResult <= 0) return _upperBound(curNode.rightChild, key);\n    return _upperBound(curNode.leftChild, key) || {\n      key: curNode.key,\n      value: curNode.value\n    };\n  };\n\n  this.upperBound = function (key) {\n    return _upperBound(root, key);\n  };\n\n  var _reverseLowerBound = function _reverseLowerBound(curNode, key) {\n    if (!curNode || curNode.key === undefined || curNode.value === undefined) return undefined;\n    var cmpResult = cmp(curNode.key, key);\n    if (cmpResult === 0) return {\n      key: curNode.key,\n      value: curNode.value\n    };\n    if (cmpResult > 0) return _reverseLowerBound(curNode.leftChild, key);\n    return _reverseLowerBound(curNode.rightChild, key) || {\n      key: curNode.key,\n      value: curNode.value\n    };\n  };\n\n  this.reverseLowerBound = function (key) {\n    return _reverseLowerBound(root, key);\n  };\n\n  var _reverseUpperBound = function _reverseUpperBound(curNode, key) {\n    if (!curNode || curNode.key === undefined || curNode.value === undefined) return undefined;\n    var cmpResult = cmp(curNode.key, key);\n    if (cmpResult >= 0) return _reverseUpperBound(curNode.leftChild, key);\n    return _reverseUpperBound(curNode.rightChild, key) || {\n      key: curNode.key,\n      value: curNode.value\n    };\n  };\n\n  this.reverseUpperBound = function (key) {\n    return _reverseUpperBound(root, key);\n  };\n\n  var eraseNodeSelfBalance = function eraseNodeSelfBalance(curNode) {\n    var parentNode = curNode.parent;\n\n    if (!parentNode) {\n      if (curNode === root) return;\n      throw new Error(\"unknown error\");\n    }\n\n    if (curNode.color === TreeNode.TreeNodeColorType.red) {\n      curNode.color = TreeNode.TreeNodeColorType.black;\n      return;\n    }\n\n    var brotherNode = curNode.brother;\n    if (!brotherNode) throw new Error(\"unknown error\");\n\n    if (curNode === parentNode.leftChild) {\n      if (brotherNode.color === TreeNode.TreeNodeColorType.red) {\n        brotherNode.color = TreeNode.TreeNodeColorType.black;\n        parentNode.color = TreeNode.TreeNodeColorType.red;\n        var newRoot = parentNode.rotateLeft();\n        if (root === parentNode) root = newRoot;\n        eraseNodeSelfBalance(curNode);\n      } else if (brotherNode.color === TreeNode.TreeNodeColorType.black) {\n        if (brotherNode.rightChild && brotherNode.rightChild.color === TreeNode.TreeNodeColorType.red) {\n          brotherNode.color = parentNode.color;\n          parentNode.color = TreeNode.TreeNodeColorType.black;\n          if (brotherNode.rightChild) brotherNode.rightChild.color = TreeNode.TreeNodeColorType.black;\n          var newRoot = parentNode.rotateLeft();\n          if (root === parentNode) root = newRoot;\n          curNode.color = TreeNode.TreeNodeColorType.black;\n        } else if ((!brotherNode.rightChild || brotherNode.rightChild.color === TreeNode.TreeNodeColorType.black) && brotherNode.leftChild && brotherNode.leftChild.color === TreeNode.TreeNodeColorType.red) {\n          brotherNode.color = TreeNode.TreeNodeColorType.red;\n          if (brotherNode.leftChild) brotherNode.leftChild.color = TreeNode.TreeNodeColorType.black;\n          var newRoot = brotherNode.rotateRight();\n          if (root === brotherNode) root = newRoot;\n          eraseNodeSelfBalance(curNode);\n        } else if ((!brotherNode.leftChild || brotherNode.leftChild.color === TreeNode.TreeNodeColorType.black) && (!brotherNode.rightChild || brotherNode.rightChild.color === TreeNode.TreeNodeColorType.black)) {\n          brotherNode.color = TreeNode.TreeNodeColorType.red;\n          eraseNodeSelfBalance(parentNode);\n        }\n      }\n    } else if (curNode === parentNode.rightChild) {\n      if (brotherNode.color === TreeNode.TreeNodeColorType.red) {\n        brotherNode.color = TreeNode.TreeNodeColorType.black;\n        parentNode.color = TreeNode.TreeNodeColorType.red;\n        var newRoot = parentNode.rotateRight();\n        if (root === parentNode) root = newRoot;\n        eraseNodeSelfBalance(curNode);\n      } else if (brotherNode.color === TreeNode.TreeNodeColorType.black) {\n        if (brotherNode.leftChild && brotherNode.leftChild.color === TreeNode.TreeNodeColorType.red) {\n          brotherNode.color = parentNode.color;\n          parentNode.color = TreeNode.TreeNodeColorType.black;\n          if (brotherNode.leftChild) brotherNode.leftChild.color = TreeNode.TreeNodeColorType.black;\n          var newRoot = parentNode.rotateRight();\n          if (root === parentNode) root = newRoot;\n          curNode.color = TreeNode.TreeNodeColorType.black;\n        } else if ((!brotherNode.leftChild || brotherNode.leftChild.color === TreeNode.TreeNodeColorType.black) && brotherNode.rightChild && brotherNode.rightChild.color === TreeNode.TreeNodeColorType.red) {\n          brotherNode.color = TreeNode.TreeNodeColorType.red;\n          if (brotherNode.rightChild) brotherNode.rightChild.color = TreeNode.TreeNodeColorType.black;\n          var newRoot = brotherNode.rotateLeft();\n          if (root === brotherNode) root = newRoot;\n          eraseNodeSelfBalance(curNode);\n        } else if ((!brotherNode.leftChild || brotherNode.leftChild.color === TreeNode.TreeNodeColorType.black) && (!brotherNode.rightChild || brotherNode.rightChild.color === TreeNode.TreeNodeColorType.black)) {\n          brotherNode.color = TreeNode.TreeNodeColorType.red;\n          eraseNodeSelfBalance(parentNode);\n        }\n      }\n    }\n  };\n\n  var eraseNode = function eraseNode(curNode) {\n    var swapNode = curNode;\n\n    while (swapNode.leftChild || swapNode.rightChild) {\n      if (swapNode.rightChild) {\n        swapNode = findSubTreeMinNode(swapNode.rightChild);\n        var tmpKey = curNode.key;\n        curNode.key = swapNode.key;\n        swapNode.key = tmpKey;\n        var tmpValue = curNode.value;\n        curNode.value = swapNode.value;\n        swapNode.value = tmpValue;\n        curNode = swapNode;\n      }\n\n      if (swapNode.leftChild) {\n        swapNode = findSubTreeMaxNode(swapNode.leftChild);\n        var tmpKey = curNode.key;\n        curNode.key = swapNode.key;\n        swapNode.key = tmpKey;\n        var tmpValue = curNode.value;\n        curNode.value = swapNode.value;\n        swapNode.value = tmpValue;\n        curNode = swapNode;\n      }\n    }\n\n    eraseNodeSelfBalance(swapNode);\n    if (swapNode) swapNode.remove();\n    --len;\n    root.color = TreeNode.TreeNodeColorType.black;\n  };\n\n  var inOrderTraversal = function inOrderTraversal(curNode, callback) {\n    if (!curNode || curNode.key === undefined) return false;\n    var ifReturn = inOrderTraversal(curNode.leftChild, callback);\n    if (ifReturn) return true;\n    if (callback(curNode)) return true;\n    return inOrderTraversal(curNode.rightChild, callback);\n  };\n\n  this.eraseElementByPos = function (pos) {\n    if (pos < 0 || pos >= len) throw new Error(\"pos must more than 0 and less than set's size\");\n    var index = 0;\n    inOrderTraversal(root, function (curNode) {\n      if (pos === index) {\n        eraseNode(curNode);\n        return true;\n      }\n\n      ++index;\n      return false;\n    });\n  };\n\n  this.eraseElementByKey = function (key) {\n    if (this.empty()) return;\n    var curNode = findElementPos(root, key);\n    if (curNode === undefined || curNode.key === undefined || cmp(curNode.key, key) !== 0) return;\n    eraseNode(curNode);\n  };\n\n  var findInsertPos = function findInsertPos(curNode, element) {\n    if (!curNode || curNode.key === undefined) throw new Error(\"unknown error\");\n    var cmpResult = cmp(element, curNode.key);\n\n    if (cmpResult < 0) {\n      if (!curNode.leftChild) {\n        curNode.leftChild = new TreeNode();\n        curNode.leftChild.parent = curNode;\n        curNode.leftChild.brother = curNode.rightChild;\n        if (curNode.rightChild) curNode.rightChild.brother = curNode.leftChild;\n        return curNode.leftChild;\n      }\n\n      return findInsertPos(curNode.leftChild, element);\n    } else if (cmpResult > 0) {\n      if (!curNode.rightChild) {\n        curNode.rightChild = new TreeNode();\n        curNode.rightChild.parent = curNode;\n        curNode.rightChild.brother = curNode.leftChild;\n        if (curNode.leftChild) curNode.leftChild.brother = curNode.rightChild;\n        return curNode.rightChild;\n      }\n\n      return findInsertPos(curNode.rightChild, element);\n    }\n\n    return curNode;\n  };\n\n  var insertNodeSelfBalance = function insertNodeSelfBalance(curNode) {\n    var parentNode = curNode.parent;\n\n    if (!parentNode) {\n      if (curNode === root) return;\n      throw new Error(\"unknown error\");\n    }\n\n    if (parentNode.color === TreeNode.TreeNodeColorType.black) return;\n\n    if (parentNode.color === TreeNode.TreeNodeColorType.red) {\n      var uncleNode = parentNode.brother;\n      var grandParent = parentNode.parent;\n      if (!grandParent) throw new Error(\"unknown error\");\n\n      if (uncleNode && uncleNode.color === TreeNode.TreeNodeColorType.red) {\n        uncleNode.color = parentNode.color = TreeNode.TreeNodeColorType.black;\n        grandParent.color = TreeNode.TreeNodeColorType.red;\n        insertNodeSelfBalance(grandParent);\n      } else if (!uncleNode || uncleNode.color === TreeNode.TreeNodeColorType.black) {\n        if (parentNode === grandParent.leftChild) {\n          if (curNode === parentNode.leftChild) {\n            parentNode.color = TreeNode.TreeNodeColorType.black;\n            grandParent.color = TreeNode.TreeNodeColorType.red;\n            var newRoot = grandParent.rotateRight();\n            if (grandParent === root) root = newRoot;\n          } else if (curNode === parentNode.rightChild) {\n            var newRoot = parentNode.rotateLeft();\n            if (grandParent === root) root = newRoot;\n            insertNodeSelfBalance(parentNode);\n          }\n        } else if (parentNode === grandParent.rightChild) {\n          if (curNode === parentNode.leftChild) {\n            var newRoot = parentNode.rotateRight();\n            if (grandParent === root) root = newRoot;\n            insertNodeSelfBalance(parentNode);\n          } else if (curNode === parentNode.rightChild) {\n            parentNode.color = TreeNode.TreeNodeColorType.black;\n            grandParent.color = TreeNode.TreeNodeColorType.red;\n            var newRoot = grandParent.rotateLeft();\n            if (grandParent === root) root = newRoot;\n          }\n        }\n      }\n    }\n  };\n\n  this.setElement = function (key, value) {\n    if (key === null || key === undefined) {\n      throw new Error(\"to avoid some unnecessary errors, we don't suggest you insert null or undefined here\");\n    }\n\n    if (value === null || value === undefined) {\n      this.eraseElementByKey(key);\n      return;\n    }\n\n    if (this.empty()) {\n      ++len;\n      root.key = key;\n      root.value = value;\n      root.color = TreeNode.TreeNodeColorType.black;\n      return;\n    }\n\n    var curNode = findInsertPos(root, key);\n\n    if (curNode.key !== undefined && cmp(curNode.key, key) === 0) {\n      curNode.value = value;\n      return;\n    }\n\n    ++len;\n    curNode.key = key;\n    curNode.value = value;\n    insertNodeSelfBalance(curNode);\n    root.color = TreeNode.TreeNodeColorType.black;\n  };\n\n  var findElementPos = function findElementPos(curNode, element) {\n    if (!curNode || curNode.key === undefined) return undefined;\n    var cmpResult = cmp(element, curNode.key);\n    if (cmpResult < 0) return findElementPos(curNode.leftChild, element);else if (cmpResult > 0) return findElementPos(curNode.rightChild, element);\n    return curNode;\n  };\n\n  this.find = function (element) {\n    return !!findElementPos(root, element);\n  };\n\n  this.getElementByKey = function (element) {\n    var curNode = findElementPos(root, element);\n    if ((curNode === null || curNode === void 0 ? void 0 : curNode.key) === undefined || (curNode === null || curNode === void 0 ? void 0 : curNode.value) === undefined) throw new Error(\"unknown error\");\n    return curNode.value;\n  }; // waiting for optimization, this is O(mlog(n+m)) algorithm now, but we expect it to be O(mlog(n/m+1)).\n  // (https://en.wikipedia.org/wiki/Red%E2%80%93black_tree#Set_operations_and_bulk_operations)\n\n\n  this.union = function (other) {\n    var _this = this;\n\n    other.forEach(function (_a) {\n      var key = _a.key,\n          value = _a.value;\n      return _this.setElement(key, value);\n    });\n  };\n\n  this.getHeight = function () {\n    if (this.empty()) return 0;\n\n    var traversal = function traversal(curNode) {\n      if (!curNode) return 1;\n      return Math.max(traversal(curNode.leftChild), traversal(curNode.rightChild)) + 1;\n    };\n\n    return traversal(root);\n  };\n\n  var iterationFunc = function iterationFunc(curNode) {\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (!curNode || curNode.key === undefined || curNode.value === undefined) return [2\n          /*return*/\n          ];\n          return [5\n          /*yield**/\n          , __values(iterationFunc(curNode.leftChild))];\n\n        case 1:\n          _a.sent();\n\n          return [4\n          /*yield*/\n          , {\n            key: curNode.key,\n            value: curNode.value\n          }];\n\n        case 2:\n          _a.sent();\n\n          return [5\n          /*yield**/\n          , __values(iterationFunc(curNode.rightChild))];\n\n        case 3:\n          _a.sent();\n\n          return [2\n          /*return*/\n          ];\n      }\n    });\n  };\n\n  this[Symbol.iterator] = function () {\n    return iterationFunc(root);\n  };\n\n  container.forEach(function (_a) {\n    var key = _a.key,\n        value = _a.value;\n    return _this.setElement(key, value);\n  });\n  Object.freeze(this);\n}\n\nObject.freeze(Map);\nexport default Map;","map":{"version":3,"names":["__generator","thisArg","body","_","label","sent","t","trys","ops","f","y","g","next","verb","Symbol","iterator","n","v","step","op","TypeError","call","done","value","pop","length","push","e","__values","o","s","m","i","TreeNode","Map","container","cmp","_this","x","len","root","color","TreeNodeColorType","black","size","empty","clear","key","undefined","leftChild","rightChild","brother","findSubTreeMinNode","curNode","Error","findSubTreeMaxNode","front","minNode","back","maxNode","forEach","callback","e_1","_a","index","_b","_c","pair","e_1_1","error","return","getElementByPos","pos","e_2","e_2_1","_lowerBound","cmpResult","lowerBound","_upperBound","upperBound","_reverseLowerBound","reverseLowerBound","_reverseUpperBound","reverseUpperBound","eraseNodeSelfBalance","parentNode","parent","red","brotherNode","newRoot","rotateLeft","rotateRight","eraseNode","swapNode","tmpKey","tmpValue","remove","inOrderTraversal","ifReturn","eraseElementByPos","eraseElementByKey","findElementPos","findInsertPos","element","insertNodeSelfBalance","uncleNode","grandParent","setElement","find","getElementByKey","union","other","getHeight","traversal","Math","max","iterationFunc","Object","freeze"],"sources":["/Users/Neutron/Project/Trisno/client/node_modules/js-sdsl/dist/esm/Map/Map.js"],"sourcesContent":["var __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nimport TreeNode from \"../Base/TreeNode\";\nfunction Map(container, cmp) {\n    var _this = this;\n    if (container === void 0) { container = []; }\n    cmp = cmp || (function (x, y) {\n        if (x < y)\n            return -1;\n        if (x > y)\n            return 1;\n        return 0;\n    });\n    var len = 0;\n    var root = new TreeNode();\n    root.color = TreeNode.TreeNodeColorType.black;\n    this.size = function () {\n        return len;\n    };\n    this.empty = function () {\n        return len === 0;\n    };\n    this.clear = function () {\n        len = 0;\n        root.key = root.value = undefined;\n        root.leftChild = root.rightChild = root.brother = undefined;\n    };\n    var findSubTreeMinNode = function (curNode) {\n        if (!curNode || curNode.key === undefined)\n            throw new Error(\"unknown error\");\n        return curNode.leftChild ? findSubTreeMinNode(curNode.leftChild) : curNode;\n    };\n    var findSubTreeMaxNode = function (curNode) {\n        if (!curNode || curNode.key === undefined)\n            throw new Error(\"unknown error\");\n        return curNode.rightChild ? findSubTreeMaxNode(curNode.rightChild) : curNode;\n    };\n    this.front = function () {\n        if (this.empty())\n            return undefined;\n        var minNode = findSubTreeMinNode(root);\n        if (minNode.key === undefined || minNode.value === undefined)\n            throw new Error(\"unknown error\");\n        return {\n            key: minNode.key,\n            value: minNode.value\n        };\n    };\n    this.back = function () {\n        if (this.empty())\n            return undefined;\n        var maxNode = findSubTreeMaxNode(root);\n        if (maxNode.key === undefined || maxNode.value === undefined)\n            throw new Error(\"unknown error\");\n        return {\n            key: maxNode.key,\n            value: maxNode.value\n        };\n    };\n    this.forEach = function (callback) {\n        var e_1, _a;\n        var index = 0;\n        try {\n            for (var _b = __values(this), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var pair = _c.value;\n                callback(pair, index++);\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n    };\n    this.getElementByPos = function (pos) {\n        var e_2, _a;\n        if (pos < 0 || pos >= this.size())\n            throw new Error(\"pos must more than 0 and less than set's size\");\n        var index = 0;\n        try {\n            for (var _b = __values(this), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var pair = _c.value;\n                if (index === pos)\n                    return pair;\n                ++index;\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        throw new Error(\"unknown Error\");\n    };\n    var _lowerBound = function (curNode, key) {\n        if (!curNode || curNode.key === undefined || curNode.value === undefined)\n            return undefined;\n        var cmpResult = cmp(curNode.key, key);\n        if (cmpResult === 0)\n            return { key: curNode.key, value: curNode.value };\n        if (cmpResult < 0)\n            return _lowerBound(curNode.rightChild, key);\n        return _lowerBound(curNode.leftChild, key) || {\n            key: curNode.key,\n            value: curNode.value\n        };\n    };\n    this.lowerBound = function (key) {\n        return _lowerBound(root, key);\n    };\n    var _upperBound = function (curNode, key) {\n        if (!curNode || curNode.key === undefined || curNode.value === undefined)\n            return undefined;\n        var cmpResult = cmp(curNode.key, key);\n        if (cmpResult <= 0)\n            return _upperBound(curNode.rightChild, key);\n        return _upperBound(curNode.leftChild, key) || {\n            key: curNode.key,\n            value: curNode.value\n        };\n    };\n    this.upperBound = function (key) {\n        return _upperBound(root, key);\n    };\n    var _reverseLowerBound = function (curNode, key) {\n        if (!curNode || curNode.key === undefined || curNode.value === undefined)\n            return undefined;\n        var cmpResult = cmp(curNode.key, key);\n        if (cmpResult === 0)\n            return { key: curNode.key, value: curNode.value };\n        if (cmpResult > 0)\n            return _reverseLowerBound(curNode.leftChild, key);\n        return _reverseLowerBound(curNode.rightChild, key) || {\n            key: curNode.key,\n            value: curNode.value\n        };\n    };\n    this.reverseLowerBound = function (key) {\n        return _reverseLowerBound(root, key);\n    };\n    var _reverseUpperBound = function (curNode, key) {\n        if (!curNode || curNode.key === undefined || curNode.value === undefined)\n            return undefined;\n        var cmpResult = cmp(curNode.key, key);\n        if (cmpResult >= 0)\n            return _reverseUpperBound(curNode.leftChild, key);\n        return _reverseUpperBound(curNode.rightChild, key) || {\n            key: curNode.key,\n            value: curNode.value\n        };\n    };\n    this.reverseUpperBound = function (key) {\n        return _reverseUpperBound(root, key);\n    };\n    var eraseNodeSelfBalance = function (curNode) {\n        var parentNode = curNode.parent;\n        if (!parentNode) {\n            if (curNode === root)\n                return;\n            throw new Error(\"unknown error\");\n        }\n        if (curNode.color === TreeNode.TreeNodeColorType.red) {\n            curNode.color = TreeNode.TreeNodeColorType.black;\n            return;\n        }\n        var brotherNode = curNode.brother;\n        if (!brotherNode)\n            throw new Error(\"unknown error\");\n        if (curNode === parentNode.leftChild) {\n            if (brotherNode.color === TreeNode.TreeNodeColorType.red) {\n                brotherNode.color = TreeNode.TreeNodeColorType.black;\n                parentNode.color = TreeNode.TreeNodeColorType.red;\n                var newRoot = parentNode.rotateLeft();\n                if (root === parentNode)\n                    root = newRoot;\n                eraseNodeSelfBalance(curNode);\n            }\n            else if (brotherNode.color === TreeNode.TreeNodeColorType.black) {\n                if (brotherNode.rightChild && brotherNode.rightChild.color === TreeNode.TreeNodeColorType.red) {\n                    brotherNode.color = parentNode.color;\n                    parentNode.color = TreeNode.TreeNodeColorType.black;\n                    if (brotherNode.rightChild)\n                        brotherNode.rightChild.color = TreeNode.TreeNodeColorType.black;\n                    var newRoot = parentNode.rotateLeft();\n                    if (root === parentNode)\n                        root = newRoot;\n                    curNode.color = TreeNode.TreeNodeColorType.black;\n                }\n                else if ((!brotherNode.rightChild || brotherNode.rightChild.color === TreeNode.TreeNodeColorType.black) && brotherNode.leftChild && brotherNode.leftChild.color === TreeNode.TreeNodeColorType.red) {\n                    brotherNode.color = TreeNode.TreeNodeColorType.red;\n                    if (brotherNode.leftChild)\n                        brotherNode.leftChild.color = TreeNode.TreeNodeColorType.black;\n                    var newRoot = brotherNode.rotateRight();\n                    if (root === brotherNode)\n                        root = newRoot;\n                    eraseNodeSelfBalance(curNode);\n                }\n                else if ((!brotherNode.leftChild || brotherNode.leftChild.color === TreeNode.TreeNodeColorType.black) && (!brotherNode.rightChild || brotherNode.rightChild.color === TreeNode.TreeNodeColorType.black)) {\n                    brotherNode.color = TreeNode.TreeNodeColorType.red;\n                    eraseNodeSelfBalance(parentNode);\n                }\n            }\n        }\n        else if (curNode === parentNode.rightChild) {\n            if (brotherNode.color === TreeNode.TreeNodeColorType.red) {\n                brotherNode.color = TreeNode.TreeNodeColorType.black;\n                parentNode.color = TreeNode.TreeNodeColorType.red;\n                var newRoot = parentNode.rotateRight();\n                if (root === parentNode)\n                    root = newRoot;\n                eraseNodeSelfBalance(curNode);\n            }\n            else if (brotherNode.color === TreeNode.TreeNodeColorType.black) {\n                if (brotherNode.leftChild && brotherNode.leftChild.color === TreeNode.TreeNodeColorType.red) {\n                    brotherNode.color = parentNode.color;\n                    parentNode.color = TreeNode.TreeNodeColorType.black;\n                    if (brotherNode.leftChild)\n                        brotherNode.leftChild.color = TreeNode.TreeNodeColorType.black;\n                    var newRoot = parentNode.rotateRight();\n                    if (root === parentNode)\n                        root = newRoot;\n                    curNode.color = TreeNode.TreeNodeColorType.black;\n                }\n                else if ((!brotherNode.leftChild || brotherNode.leftChild.color === TreeNode.TreeNodeColorType.black) && brotherNode.rightChild && brotherNode.rightChild.color === TreeNode.TreeNodeColorType.red) {\n                    brotherNode.color = TreeNode.TreeNodeColorType.red;\n                    if (brotherNode.rightChild)\n                        brotherNode.rightChild.color = TreeNode.TreeNodeColorType.black;\n                    var newRoot = brotherNode.rotateLeft();\n                    if (root === brotherNode)\n                        root = newRoot;\n                    eraseNodeSelfBalance(curNode);\n                }\n                else if ((!brotherNode.leftChild || brotherNode.leftChild.color === TreeNode.TreeNodeColorType.black) && (!brotherNode.rightChild || brotherNode.rightChild.color === TreeNode.TreeNodeColorType.black)) {\n                    brotherNode.color = TreeNode.TreeNodeColorType.red;\n                    eraseNodeSelfBalance(parentNode);\n                }\n            }\n        }\n    };\n    var eraseNode = function (curNode) {\n        var swapNode = curNode;\n        while (swapNode.leftChild || swapNode.rightChild) {\n            if (swapNode.rightChild) {\n                swapNode = findSubTreeMinNode(swapNode.rightChild);\n                var tmpKey = curNode.key;\n                curNode.key = swapNode.key;\n                swapNode.key = tmpKey;\n                var tmpValue = curNode.value;\n                curNode.value = swapNode.value;\n                swapNode.value = tmpValue;\n                curNode = swapNode;\n            }\n            if (swapNode.leftChild) {\n                swapNode = findSubTreeMaxNode(swapNode.leftChild);\n                var tmpKey = curNode.key;\n                curNode.key = swapNode.key;\n                swapNode.key = tmpKey;\n                var tmpValue = curNode.value;\n                curNode.value = swapNode.value;\n                swapNode.value = tmpValue;\n                curNode = swapNode;\n            }\n        }\n        eraseNodeSelfBalance(swapNode);\n        if (swapNode)\n            swapNode.remove();\n        --len;\n        root.color = TreeNode.TreeNodeColorType.black;\n    };\n    var inOrderTraversal = function (curNode, callback) {\n        if (!curNode || curNode.key === undefined)\n            return false;\n        var ifReturn = inOrderTraversal(curNode.leftChild, callback);\n        if (ifReturn)\n            return true;\n        if (callback(curNode))\n            return true;\n        return inOrderTraversal(curNode.rightChild, callback);\n    };\n    this.eraseElementByPos = function (pos) {\n        if (pos < 0 || pos >= len)\n            throw new Error(\"pos must more than 0 and less than set's size\");\n        var index = 0;\n        inOrderTraversal(root, function (curNode) {\n            if (pos === index) {\n                eraseNode(curNode);\n                return true;\n            }\n            ++index;\n            return false;\n        });\n    };\n    this.eraseElementByKey = function (key) {\n        if (this.empty())\n            return;\n        var curNode = findElementPos(root, key);\n        if (curNode === undefined || curNode.key === undefined || cmp(curNode.key, key) !== 0)\n            return;\n        eraseNode(curNode);\n    };\n    var findInsertPos = function (curNode, element) {\n        if (!curNode || curNode.key === undefined)\n            throw new Error(\"unknown error\");\n        var cmpResult = cmp(element, curNode.key);\n        if (cmpResult < 0) {\n            if (!curNode.leftChild) {\n                curNode.leftChild = new TreeNode();\n                curNode.leftChild.parent = curNode;\n                curNode.leftChild.brother = curNode.rightChild;\n                if (curNode.rightChild)\n                    curNode.rightChild.brother = curNode.leftChild;\n                return curNode.leftChild;\n            }\n            return findInsertPos(curNode.leftChild, element);\n        }\n        else if (cmpResult > 0) {\n            if (!curNode.rightChild) {\n                curNode.rightChild = new TreeNode();\n                curNode.rightChild.parent = curNode;\n                curNode.rightChild.brother = curNode.leftChild;\n                if (curNode.leftChild)\n                    curNode.leftChild.brother = curNode.rightChild;\n                return curNode.rightChild;\n            }\n            return findInsertPos(curNode.rightChild, element);\n        }\n        return curNode;\n    };\n    var insertNodeSelfBalance = function (curNode) {\n        var parentNode = curNode.parent;\n        if (!parentNode) {\n            if (curNode === root)\n                return;\n            throw new Error(\"unknown error\");\n        }\n        if (parentNode.color === TreeNode.TreeNodeColorType.black)\n            return;\n        if (parentNode.color === TreeNode.TreeNodeColorType.red) {\n            var uncleNode = parentNode.brother;\n            var grandParent = parentNode.parent;\n            if (!grandParent)\n                throw new Error(\"unknown error\");\n            if (uncleNode && uncleNode.color === TreeNode.TreeNodeColorType.red) {\n                uncleNode.color = parentNode.color = TreeNode.TreeNodeColorType.black;\n                grandParent.color = TreeNode.TreeNodeColorType.red;\n                insertNodeSelfBalance(grandParent);\n            }\n            else if (!uncleNode || uncleNode.color === TreeNode.TreeNodeColorType.black) {\n                if (parentNode === grandParent.leftChild) {\n                    if (curNode === parentNode.leftChild) {\n                        parentNode.color = TreeNode.TreeNodeColorType.black;\n                        grandParent.color = TreeNode.TreeNodeColorType.red;\n                        var newRoot = grandParent.rotateRight();\n                        if (grandParent === root)\n                            root = newRoot;\n                    }\n                    else if (curNode === parentNode.rightChild) {\n                        var newRoot = parentNode.rotateLeft();\n                        if (grandParent === root)\n                            root = newRoot;\n                        insertNodeSelfBalance(parentNode);\n                    }\n                }\n                else if (parentNode === grandParent.rightChild) {\n                    if (curNode === parentNode.leftChild) {\n                        var newRoot = parentNode.rotateRight();\n                        if (grandParent === root)\n                            root = newRoot;\n                        insertNodeSelfBalance(parentNode);\n                    }\n                    else if (curNode === parentNode.rightChild) {\n                        parentNode.color = TreeNode.TreeNodeColorType.black;\n                        grandParent.color = TreeNode.TreeNodeColorType.red;\n                        var newRoot = grandParent.rotateLeft();\n                        if (grandParent === root)\n                            root = newRoot;\n                    }\n                }\n            }\n        }\n    };\n    this.setElement = function (key, value) {\n        if (key === null || key === undefined) {\n            throw new Error(\"to avoid some unnecessary errors, we don't suggest you insert null or undefined here\");\n        }\n        if (value === null || value === undefined) {\n            this.eraseElementByKey(key);\n            return;\n        }\n        if (this.empty()) {\n            ++len;\n            root.key = key;\n            root.value = value;\n            root.color = TreeNode.TreeNodeColorType.black;\n            return;\n        }\n        var curNode = findInsertPos(root, key);\n        if (curNode.key !== undefined && cmp(curNode.key, key) === 0) {\n            curNode.value = value;\n            return;\n        }\n        ++len;\n        curNode.key = key;\n        curNode.value = value;\n        insertNodeSelfBalance(curNode);\n        root.color = TreeNode.TreeNodeColorType.black;\n    };\n    var findElementPos = function (curNode, element) {\n        if (!curNode || curNode.key === undefined)\n            return undefined;\n        var cmpResult = cmp(element, curNode.key);\n        if (cmpResult < 0)\n            return findElementPos(curNode.leftChild, element);\n        else if (cmpResult > 0)\n            return findElementPos(curNode.rightChild, element);\n        return curNode;\n    };\n    this.find = function (element) {\n        return !!findElementPos(root, element);\n    };\n    this.getElementByKey = function (element) {\n        var curNode = findElementPos(root, element);\n        if ((curNode === null || curNode === void 0 ? void 0 : curNode.key) === undefined || (curNode === null || curNode === void 0 ? void 0 : curNode.value) === undefined)\n            throw new Error(\"unknown error\");\n        return curNode.value;\n    };\n    // waiting for optimization, this is O(mlog(n+m)) algorithm now, but we expect it to be O(mlog(n/m+1)).\n    // (https://en.wikipedia.org/wiki/Red%E2%80%93black_tree#Set_operations_and_bulk_operations)\n    this.union = function (other) {\n        var _this = this;\n        other.forEach(function (_a) {\n            var key = _a.key, value = _a.value;\n            return _this.setElement(key, value);\n        });\n    };\n    this.getHeight = function () {\n        if (this.empty())\n            return 0;\n        var traversal = function (curNode) {\n            if (!curNode)\n                return 1;\n            return Math.max(traversal(curNode.leftChild), traversal(curNode.rightChild)) + 1;\n        };\n        return traversal(root);\n    };\n    var iterationFunc = function (curNode) {\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (!curNode || curNode.key === undefined || curNode.value === undefined)\n                        return [2 /*return*/];\n                    return [5 /*yield**/, __values(iterationFunc(curNode.leftChild))];\n                case 1:\n                    _a.sent();\n                    return [4 /*yield*/, { key: curNode.key, value: curNode.value }];\n                case 2:\n                    _a.sent();\n                    return [5 /*yield**/, __values(iterationFunc(curNode.rightChild))];\n                case 3:\n                    _a.sent();\n                    return [2 /*return*/];\n            }\n        });\n    };\n    this[Symbol.iterator] = function () {\n        return iterationFunc(root);\n    };\n    container.forEach(function (_a) {\n        var key = _a.key, value = _a.value;\n        return _this.setElement(key, value);\n    });\n    Object.freeze(this);\n}\nObject.freeze(Map);\nexport default Map;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}